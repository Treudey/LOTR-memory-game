{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Main/index.js","components/CharacterTile/index.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","message","score","topScore","Header","Main","children","CharacterTile","id","src","url","alt","name","onClick","handleGuess","App","state","guessedChars","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","_this$state","_this","includes","setState","newScore","newTopScore","addedToArray","concat","_this2","this","characterTilesArr","characters","map","character","components_CharacterTile","image","components_Navbar","components_Header","components_Main","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"i7EAmBeA,MAhBf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,SAAIH,EAAMK,UAEZJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,mBAAWH,EAAMM,MAAjB,iBAAsCN,EAAMO,mBCErCC,MAZf,WACE,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,qBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,4FCFOK,MAJf,SAAcT,GACZ,OAAOC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOJ,EAAMU,kBCelDC,MAhBf,SAAuBX,GAErB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,OACES,GAAIZ,EAAMY,GACVC,IAAKb,EAAMc,IACXC,IAAKf,EAAMgB,KACXZ,UAAU,gBACVa,QAAS,kBAAMjB,EAAMkB,YAAYlB,EAAMY,gBCoFhCO,oNAvFbC,MAAQ,CACNf,QAAS,2BACTC,MAAO,EACPC,SAAU,EACVc,aAAc,MAGhBC,QAAU,SAACC,GAIT,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,KAGTL,YAAc,SAACN,GAAO,IAAAmB,EACsBC,EAAKZ,MAAvCC,EADYU,EACZV,aAAcf,EADFyB,EACEzB,MAAOC,EADTwB,EACSxB,SAC7B,GAAKc,EAAaY,SAASrB,GA2BzBoB,EAAKE,SAAS,CACZ7B,QAAS,wBACTC,MAAO,EACPe,aAAc,SA9Bc,CAC9B,GAAc,KAAVf,EACF,OAAO0B,EAAKE,SAAS,CACnB7B,QAAQ,yBACRC,MAAO,EACPC,SAAU,GACVc,aAAc,CAACT,KAGnB,IAAMuB,EAAW7B,EAAQ,EACnB8B,EAAc9B,GAASC,EAAW4B,EAAW5B,EACnD,GAAiB,KAAb4B,EACF,OAAOH,EAAKE,SAAS,CACnB7B,QAAQ,qBACRC,MAAO6B,EACP5B,SAAU6B,EACVf,aAAc,KAGlB,IAAMgB,EAAehB,EAAaiB,OAAO1B,GACzCoB,EAAKE,SAAS,CACZ7B,QAAQ,yBACRC,MAAO6B,EACP5B,SAAU6B,EACVf,aAAcgB,8EAWX,IAAAE,EAAAC,KAGDC,EAFqBD,KAAKlB,QAAQoB,GAEKC,IAAI,SAAAC,GAAS,OACxD3C,EAAAC,EAAAC,cAAC0C,EAAD,CACEjC,GAAIgC,EAAUhC,GACdI,KAAM4B,EAAU5B,KAChBF,IAAK8B,EAAUE,MACf5B,YAAaqB,EAAKrB,gBAItB,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4C,EAAD,CAAQ1C,QAASmC,KAAKpB,MAAMf,QAASC,MAAOkC,KAAKpB,MAAMd,MAAOC,SAAUiC,KAAKpB,MAAMb,WACnFN,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAC8C,EAAD,KACGR,WAjFOS,IAAMC,YCHxBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.819c102b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return (\n    <ul className=\"nav nav-pills nav-fill\">\n      <li className=\"nav-item page-title\">\n        <p>LOTR Memory Game</p>\n      </li>\n      <li className=\"nav-item\">\n        <p>{props.message}</p>\n      </li>\n      <li className=\"nav-item\">\n        <p>Score: {props.score} | Top Score: {props.topScore}</p>\n      </li>\n    </ul>\n  );\n}\n\nexport default Navbar;\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid text-center\">\n      <div className=\"container\">\n        <h1 className=\"display-2\">Lord of the Rings</h1>\n        <h2 className=\"display-3\">Memory Game</h2>\n        <p className=\"lead\">Click on a character to earn points, but don't click on someone more than once!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Main(props) {\r\n  return <main className=\"container\"><div className=\"row\">{props.children}</div></main>;\r\n}\r\n\r\nexport default Main;","import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterTile(props) {\n\n  return (\n    <div className=\"char-tile col-6 col-md-4 col-lg-3\">\n      <img \n        id={props.id} \n        src={props.url} \n        alt={props.name} \n        className=\"img-thumbnail\" \n        onClick={() => props.handleGuess(props.id)}\n      >\n      </img>\n    </div>\n  );\n}\n\nexport default CharacterTile;\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport CharacterTile from './components/CharacterTile';\nimport characters from \"./characters.json\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    message: 'Click an image to begin!',\n    score: 0,\n    topScore: 0,\n    guessedChars: []\n  };\n\n  shuffle = (array) => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  };\n\n  handleGuess = (id) => {\n    const { guessedChars, score, topScore } = this.state;\n    if (!guessedChars.includes(id)) {\n      if (score === 12) {\n        return this.setState({\n          message:'You guessed correctly!', \n          score: 1,\n          topScore: 12,\n          guessedChars: [id]\n        });\n      }\n      const newScore = score + 1;\n      const newTopScore = score >= topScore ? newScore : topScore;\n      if (newScore === 12) {\n        return this.setState({\n          message:'You win! Good Job!', \n          score: newScore,\n          topScore: newTopScore,\n          guessedChars: []\n        });\n      }\n      const addedToArray = guessedChars.concat(id);\n      this.setState({\n        message:'You guessed correctly!', \n        score: newScore,\n        topScore: newTopScore,\n        guessedChars: addedToArray\n      });\n    } else {\n      this.setState({\n        message: 'Incorrect! Try again!',\n        score: 0,\n        guessedChars: []\n      });\n    }\n  };\n\n  render() {\n    const shuffledCharacters = this.shuffle(characters);\n\n    const characterTilesArr = shuffledCharacters.map(character =>\n      <CharacterTile\n        id={character.id}\n        name={character.name}\n        url={character.image}\n        handleGuess={this.handleGuess}\n      />\n    );\n\n    return (\n      <div>\n        <Navbar message={this.state.message} score={this.state.score} topScore={this.state.topScore} />\n        <Header />\n        <Main>\n          {characterTilesArr}\n        </Main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}